Start;
Import libraries;
Initialise lists, variables and MiGlove functions[Window size];
Set keyboard interrupts;

/Load model/;
/Load scaling parameters/[data_min
data_max];

block(**Gesture Recording**){
  start:
  call miglove.clear_input_buffer;
  call miglove.connect_to_Arduino(arduino);
  Wait 0.75s[Arduino connected];
  //Recording started
  Start 10s timer;
  call miglove.clear_arduino_input_buffer(arduino);
  while (!Timer elapsed?){
    Read serial data from Arduino;
    Format, split and append data to lists;
  }
  Close serial port;
  if(!Data size >= Window size?){
    call pad_data_arrays;
  }
}
block(**Gesture Predicting**){

  Format data to 2D numpy array [data_min
data_max];
  call minMaxScaler(data_min, data_max);
  goto normalise[normalised_data];
  normalise:
  //Predict for each window in input data
  for(window = 0; window <= Number of windows in input data?;window++){
    Get current data window;
    Reshape data window to 3D tensor for LSTM input;
    Make prediction for current window;
    Store label with highest prediction score;
  }
  Print total predictions across all windows;
  Assign gesture by most popular prediction;
  (Print gesture);
  goto start;
}
